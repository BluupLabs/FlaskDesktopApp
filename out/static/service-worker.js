try{self["workbox:core:5.1.4"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.4"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class c extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const i=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class r{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:c}=this.findMatchingRoute({url:s,request:e,event:t});let i,r=c&&c.handler;if(!r&&this.s&&(r=this.s),r){try{i=r.handle({url:s,request:e,event:t,params:n})}catch(e){i=Promise.reject(e)}return i instanceof Promise&&this.i&&(i=i.catch(n=>this.i.handle({url:s,request:e,event:t}))),i}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const c of n){let n;const i=c.match({url:e,request:t,event:s});if(i)return n=i,(Array.isArray(i)&&0===i.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:c,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let a;const o=()=>(a||(a=new r,a.addFetchListener(),a.addCacheListener()),a);function u(e,s,i){let r;if("string"==typeof e){const t=new URL(e,location.href);r=new n(({url:e})=>e.href===t.href,s,i)}else if(e instanceof RegExp)r=new c(e,s,i);else if("function"==typeof e)r=new n(e,s,i);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}return o().registerRoute(r),r}try{self["workbox:cacheable-response:5.1.4"]&&_()}catch(e){}class h{constructor(e={}){this.o=e.statuses,this.u=e.headers}isResponseCacheable(e){let t=!0;return this.o&&(t=this.o.includes(e.status)),this.u&&t&&(t=Object.keys(this.u).some(t=>e.headers.get(t)===this.u[t])),t}}const f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},l=e=>[f.prefix,e,f.suffix].filter(e=>e&&e.length>0).join("-"),d=e=>e||l(f.precache),w=e=>e||l(f.runtime),p=new Set;const g=(e,t)=>e.filter(e=>t in e),b=async({request:e,mode:t,plugins:s=[]})=>{const n=g(s,"cacheKeyWillBeUsed");let c=e;for(const e of n)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},y=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:c=[]})=>{const i=await self.caches.open(e),r=await b({plugins:c,request:t,mode:"read"});let a=await i.match(r,n);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;a=await c.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:a,request:r})}return a},v=async({cacheName:e,request:s,response:n,event:c,plugins:r=[],matchOptions:a})=>{const o=await b({plugins:r,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:i(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let c=t,i=!1;for(const t of n)if("cacheWillUpdate"in t){i=!0;const n=t.cacheWillUpdate;if(c=await n.call(t,{request:e,response:c,event:s}),!c)break}return i||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:r,response:n,request:o});if(!u)return;const h=await self.caches.open(e),f=g(r,"cacheDidUpdate"),l=f.length>0?await y({cacheName:e,matchOptions:a,request:o}):null;try{await h.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of p)await e()}(),e}for(const t of f)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:l,newResponse:u,request:o})},m=y,q=async({request:e,fetchOptions:s,event:n,plugins:c=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const i=g(c,"fetchDidFail"),r=i.length>0?e.clone():null;try{for(const t of c)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const a=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of c)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:a,response:t}));return t}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:r.clone(),request:a.clone()});throw e}};try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}const R={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let x;async function U(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},c=t?t(n):n,i=function(){if(void 0===x){const e=new Response("");if("body"in e)try{new Response(e.body),x=!0}catch(e){x=!1}x=!1}return x}()?s.body:await s.blob();return new Response(i,c)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function L(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const c=new URL(n,location.href),i=new URL(n,location.href);return c.searchParams.set("__WB_REVISION__",s),{cacheKey:c.href,url:i.href}}class k{constructor(e){this.h=d(e),this.l=new Map,this.p=new Map,this.g=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:c}=L(n),i="string"!=typeof n&&n.revision?"reload":"default";if(this.l.has(c)&&this.l.get(c)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.l.get(c),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.g.has(e)&&this.g.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:c});this.g.set(e,n.integrity)}if(this.l.set(c,e),this.p.set(c,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],c=await self.caches.open(this.h),i=await c.keys(),r=new Set(i.map(e=>e.url));for(const[e,t]of this.l)r.has(t)?n.push(e):s.push({cacheKey:t,url:e});const a=s.map(({cacheKey:s,url:n})=>{const c=this.g.get(s),i=this.p.get(n);return this.v({cacheKey:s,cacheMode:i,event:e,integrity:c,plugins:t,url:n})});await Promise.all(a);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.h),t=await e.keys(),s=new Set(this.l.values()),n=[];for(const c of t)s.has(c.url)||(await e.delete(c),n.push(c.url));return{deletedURLs:n}}async v({cacheKey:e,url:s,cacheMode:n,event:c,plugins:i,integrity:r}){const a=new Request(s,{integrity:r,cache:n,credentials:"same-origin"});let o,u=await q({event:c,plugins:i,request:a});for(const e of i||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:c,request:a,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await U(u)),await v({event:c,plugins:i,response:u,request:e===s?a:new Request(e),cacheName:this.h,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.l}getCachedURLs(){return[...this.l.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.l.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.h)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.h,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),c=new Request(e);return()=>n({request:c})}}let j;const N=()=>(j||(j=new k),j);const O=(e,t)=>{const s=N().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:c}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(i,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(n){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:i});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let M=!1;function E(e){M||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const c=d();self.addEventListener("fetch",i=>{const r=O(i.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!r)return;let a=self.caches.open(c).then(e=>e.match(r)).then(e=>e||fetch(r));i.respondWith(a)})})(e),M=!0)}const T=[],P={get:()=>T,add(e){T.push(...e)}},I=e=>{const t=N(),s=P.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},K=e=>{const t=N();e.waitUntil(t.activate())};var S;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),S={},function(e){N().addToCacheList(e),e.length>0&&(self.addEventListener("install",I),self.addEventListener("activate",K))}([{url:"_next/static/chunks/1a48c3c1.f6fb44e24bf694b05ef8.js",revision:"1812c894e302bb78694644400bd0cfad"},{url:"_next/static/chunks/252f366e.2d1f72c4e8decf770336.js",revision:"8470208bea1d9ab2ef9adf48f9b364e8"},{url:"_next/static/chunks/2fbf9dd2.0eae5e15860977917de8.js",revision:"ed2416af3934dae92f236a4e5aa79122"},{url:"_next/static/chunks/51fb34cd.9a303cad9c87f84e8b46.js",revision:"c184ef173c82a386aff3233eb71bd746"},{url:"_next/static/chunks/71247caf95475e3ea7f9a0f8a30beb258b23d005.c083e2265d3edae4d60b.js",revision:"6dace688b45763720c813ef915e410f7"},{url:"_next/static/chunks/7e4bc21f.4768511a9991aab25fc8.js",revision:"dde4d2e7f35ab09eab3b82038359071c"},{url:"_next/static/chunks/commons.962143b1b00abdf97151.js",revision:"7c5a153c4c3eaa6ca5377138bcd09268"},{url:"_next/static/chunks/ea88be26.bbe86e135632ac934188.js",revision:"2fe517656b3b00887c42100b25d84aa3"},{url:"_next/static/chunks/f6078781a05fe1bcb0902d23dbbb2662c8d200b3.18782dd99096094eb67d.js",revision:"1c74027bd641d1c6dd8a230bf18ee31e"},{url:"_next/static/chunks/fcc27f93.a6f6ee4805869832bc64.js",revision:"1073475477a9674ef3edcc65fdefc1f2"},{url:"_next/static/chunks/framework.6fff953eb0f638171baa.js",revision:"9e5c77d379de3dcef5d4c66c69f76091"},{url:"_next/static/chunks/main-0f3e89d0454896a985b9.js",revision:"781fb799f4c2515b87215a7e0263b368"},{url:"_next/static/chunks/pages/_app-a2a22f5b29d252389804.js",revision:"36e9b975e28e310f2992aa2979a24ba9"},{url:"_next/static/chunks/pages/_error-e8c17aced97f601a11ea.js",revision:"f434591455814a256e8d831f5f00d88e"},{url:"_next/static/chunks/pages/index-3e45c9fccda876715263.js",revision:"76219db4c6e533c9b199834d180163f2"},{url:"_next/static/chunks/polyfills-040103c5c51c5268569e.js",revision:"13cdaf12b647b122837e0f58a30270e2"},{url:"_next/static/chunks/webpack-50bee04d1dc61f8adf5b.js",revision:"8c19f623e8389f11131a054a7e17ff95"},{url:"_next/static/css/5640f2f528edc8d9960f.css",revision:"f6aa30e428b99a564def943130478ad8"},{url:"_next/static/gd-oX_76RSXJ0LcczIJk-/_buildManifest.js",revision:"7000b75f02138f4a4577aeb0336904bb"},{url:"_next/static/gd-oX_76RSXJ0LcczIJk-/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/images/unknown-9d87c5621e941397d5fda731df091709.png",revision:"992d99fc196b808bac9cb39c53212a55"}]),E(S),u(/[.](png|jpg|ico|css)/,new class{constructor(e={}){this.h=w(e.cacheName),this.m=e.plugins||[],this.q=e.fetchOptions,this.R=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,c=await m({cacheName:this.h,request:s,event:e,matchOptions:this.R,plugins:this.m});if(!c)try{c=await this._(s,e)}catch(e){n=e}if(!c)throw new t("no-response",{url:s.url,error:n});return c}async _(e,t){const s=await q({request:e,event:t,fetchOptions:this.q,plugins:this.m}),n=s.clone(),c=v({cacheName:this.h,request:e,response:n,event:t,plugins:this.m});if(t)try{t.waitUntil(c)}catch(e){}return s}}({cacheName:"assets-cache",plugins:[new class{constructor(e){this.cacheWillUpdate=async({response:e})=>this.U.isResponseCacheable(e)?e:null,this.U=new h(e)}}({statuses:[0,200]})]}),"GET"),u(/^http.*/,new class{constructor(e={}){if(this.h=w(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.m=t?e.plugins:[R,...e.plugins]}else this.m=[R];this.L=e.networkTimeoutSeconds||0,this.q=e.fetchOptions,this.R=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const c=[];let i;if(this.L){const{id:t,promise:r}=this.k({request:s,event:e,logs:n});i=t,c.push(r)}const r=this.j({timeoutId:i,request:s,event:e,logs:n});c.push(r);let a=await Promise.race(c);if(a||(a=await r),!a)throw new t("no-response",{url:s.url});return a}k({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.N({request:e,event:s}))},1e3*this.L)}),id:n}}async j({timeoutId:e,request:t,logs:s,event:n}){let c,i;try{i=await q({request:t,event:n,fetchOptions:this.q,plugins:this.m})}catch(e){c=e}if(e&&clearTimeout(e),c||!i)i=await this.N({request:t,event:n});else{const e=i.clone(),s=v({cacheName:this.h,request:t,response:e,event:n,plugins:this.m});if(n)try{n.waitUntil(s)}catch(e){}}return i}N({event:e,request:t}){return m({cacheName:this.h,request:t,event:e,matchOptions:this.R,plugins:this.m})}}({cacheName:"http-cache",plugins:[]}),"GET");
